server.port=${PORT:8080}
logging.level.org.atmosphere=warn
spring.mustache.check-template-location=false
# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
vaadin.allowed-packages=com.vaadin,org.vaadin,dev.hilla,com.vaadin.demo
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

### DocsChat config

# Filesystem path to your documentation folder
docs.location=docs

## NOTE: Use ONLY ONE of the two options below at a time.

# OpenAI API
# Better quality, requires sending data to OpenAI
langchain4j.open-ai.streaming-chat-model.api-key=${OPENAI_API_KEY:??????}
langchain4j.open-ai.streaming-chat-model.model-name=gpt-3.5-turbo

# Local OpenAI compatible API (ollama)
# Not as performant, but your data does not leave your computer
#langchain4j.open-ai.streaming-chat-model.api-key=ollama
#langchain4j.open-ai.streaming-chat-model.base-url=http://localhost:11434/v1
#langchain4j.open-ai.streaming-chat-model.model-name=llama3:latest

# Debug logging to print requests
logging.level.dev.langchain4j=DEBUG
logging.level.dev.ai4j.openai4j=DEBUG
langchain4j.open-ai.streaming-chat-model.log-requests=true